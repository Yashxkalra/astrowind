---
// Import the Layout component
import type { InferGetStaticPropsType, GetStaticPaths } from 'astro';

import merge from 'lodash.merge';
import type { ImageMetadata } from 'astro';
import Layout from '~/layouts/PageLayout.astro';

import { getCanonical, getPermalink } from '~/utils/permalinks';
import { getStaticPathsProjectPost, ProjectPostRobots } from '~/utils/getProjectData';
import { findImage } from '~/utils/images';
import type { MetaData } from '~/types';
import SingleProject from '~/components/project/SingleProject.astro';
import { Debug } from 'astro:components';

export const prerender = true;
export const getStaticPaths = (async () => {
  return await getStaticPathsProjectPost();
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;
const { post } = Astro.props as Props;

const url = getCanonical(getPermalink(post.permalink, 'project_post'));
const image = (await findImage(post.image)) as ImageMetadata | string | undefined;

const metadata = merge(
  {
    title: post.title,
    description: post.excerpt,
    robots: {},
    openGraph: {
      type: 'projects',
      ...(image
        ? { images: [{ url: image, width: (image as ImageMetadata)?.width, height: (image as ImageMetadata)?.height }] }
        : {}),
    },
  },
  { ...(post?.metadata ? { ...post.metadata, canonical: post.metadata?.canonical || url } : {}) }
) as MetaData;
---

<Layout metadata={metadata}>
  <SingleProject post={{ ...post, image: image }} url={url}>
    <Debug {post} />
    {post.Content ? <post.Content /> : <Fragment set:html={post.content || ''} />}
  </SingleProject>
</Layout>
